#pragma once

#include "gs_propertymacros.h"

#include <Engine.h>

class GE_DLLIMPORT PSParticle : public EntityPropertySet
{
  public:
    GS_PROPERTY_SET(PSParticle, eCParticle_PS)
    GS_PROPERTY(bCVector, Acceleration)
    GS_PROPERTY(GEBool, AddLocationFromTarget)
    GS_PROPERTY(GEU8, AlphaReference)
    GS_PROPERTY(GEBool, AlphaTest)
    GS_PROPERTY(GEBool, AutoKill)
    GS_PROPERTY(GEBool, AutoReset)
    GS_PROPERTY(GEBool, AutomaticSpawning)
    GS_PROPERTY(GEBool, BlendBetweenSubdivisions)
    GS_PROPERTY(GEBool, CollideWithCharacters)
    GS_PROPERTY(GEBool, CollideWithDynamic)
    GS_PROPERTY(GEBool, CollideWithStatic)
    GS_PROPERTY(GEBool, CollideWithTransparent)
    GS_PROPERTY(eECollisionSound, CollisionSound)
    GS_PROPERTY(bCRange1, CollisionSoundIndex)
    GS_PROPERTY(bCRange1, CollisionSoundProbability)
    GS_PROPERTY(GEFloat, ColorScaleRepeats)
    GS_PROPERTY(eECoordinateSystem, CoordinateSystem)
    GS_PROPERTY(bCRange3, DampingFactor)
    GS_PROPERTY(GEBool, DepthTest)
    GS_PROPERTY(GEBool, DepthWrite)
    GS_PROPERTY(GEBool, DisableFogging)
    GS_PROPERTY(eETextureDrawStyle, DrawStyle)
    GS_PROPERTY(GEBool, Enabled)
    GS_PROPERTY(bCVector, ExtentMultiplier)
    GS_PROPERTY(bCFloatAlphaColor, FaceInFactor)
    GS_PROPERTY(bCFloatAlphaColor, FaceOutFactor)
    GS_PROPERTY(eEFacingDirection, FacingDirection)
    GS_PROPERTY(GEBool, FadeIn)
    GS_PROPERTY(GEFloat, FadeInEndTime)
    GS_PROPERTY(GEBool, FadeOut)
    GS_PROPERTY(GEFloat, FadeOutStartTime)
    GS_PROPERTY(bCRange1, InitialAge)
    GS_PROPERTY(bCRange1, InitialDelay)
    GS_PROPERTY(bCRange1, Lifetime)
    GS_PROPERTY(bCVector, MaxAbsoluteVelocity)
    GS_PROPERTY(bCRange1, MaxCollisions)
    GS_PROPERTY(GEInt, MaxNumParticles)
    GS_PROPERTY(GEU32, MaxSimultaneousSounds)
    GS_PROPERTY(GEFloat, MinSquaredVelocity)
    GS_PROPERTY(GEInt, NumUSubdivisions)
    GS_PROPERTY(GEInt, NumVSubdivisions)
    GS_PROPERTY(GEFloat, ParticlesPerSecond)
    GS_PROPERTY(bCVector, ProjectionNormal)
    GS_PROPERTY(GEBool, RandomSubdivision)
    GS_PROPERTY(GEFloat, RelativeWarmupTime)
    GS_PROPERTY(GEBool, ResetOnTrigger)
    GS_PROPERTY(GEBool, RespawnDeadParticles)
    GS_PROPERTY(bCRange3, RevolutionCenterOffset)
    GS_PROPERTY(GEFloat, RevolutionScaleRepeats)
    GS_PROPERTY(bCRange3, RevolutionsPerSecond)
    GS_PROPERTY(bCRange3, RotationDampingFactor)
    GS_PROPERTY(GEFloat, SecondsBeforeInactive)
    GS_PROPERTY(GEFloat, SizeScaleRepeats)
    GS_PROPERTY(GEU8, SoundPriority)
    GS_PROPERTY(eCEntityProxy, SpawnFromOtherEmitter)
    GS_PROPERTY(bCRange1, SpawnNumParticles)
    GS_PROPERTY(bCRange3, SpawnedVelocityScale)
    GS_PROPERTY(eESpawningSound, SpawningSound)
    GS_PROPERTY(bCRange1, SpawningSoundIndex)
    GS_PROPERTY(bCRange1, SpawningSoundProbability)
    GS_PROPERTY(GEFloat, SpinDirection)
    GS_PROPERTY(GEBool, SpinParticles)
    GS_PROPERTY(bCRange3, SpinsPerSecond)
    GS_PROPERTY(bCRange3, StartBoxLocation)
    GS_PROPERTY(bCVector, StartLocationOffset)
    GS_PROPERTY(eELocationShape, StartLocationShape)
    GS_PROPERTY(bCRange3, StartSize)
    GS_PROPERTY(bCRange1, StartSphereRadius)
    GS_PROPERTY(bCRange3, StartSpin)
    GS_PROPERTY(bCRange3, StartVelocity)
    GS_PROPERTY(GEBool, StretchToEmitter)
    GS_PROPERTY(GEInt, SubdivisionEnd)
    GS_PROPERTY(GEFloat, SubdivisionScaleRepeats)
    GS_PROPERTY(GEInt, SubdivisionStart)
    GS_PROPERTY(eCEntityProxy, TargetEntity)
    GS_PROPERTY(bCString, Texture)
    GS_PROPERTY(GEFloat, TicksPerSecond)
    GS_PROPERTY(bCRange1, TriggerNumParticles)
    GS_PROPERTY(GEFloat, TriggerParticlesPerSecond)
    GS_PROPERTY(GEBool, UniformSize)
    GS_PROPERTY(GEBool, UseCollision)
    GS_PROPERTY(GEBool, UseColorScale)
    GS_PROPERTY(GEBool, UseMaxCollisions)
    GS_PROPERTY(GEBool, UseRevolution)
    GS_PROPERTY(GEBool, UseRevolutionScale)
    GS_PROPERTY(GEBool, UseRotationDamping)
    GS_PROPERTY(eERotationFrom, UseRotationFrom)
    GS_PROPERTY(GEBool, UseSizeScale)
    GS_PROPERTY(GEBool, UseSpawnedVelocityScale)
    GS_PROPERTY(GEBool, UseSubdivisionScale)
    GS_PROPERTY(GEBool, UseVelocityScale)
    GS_PROPERTY(eEVelocityDirectionFrom, VelocityDirectionFrom)
    GS_PROPERTY(bCRange3, VelocityLoss)
    GS_PROPERTY(GEFloat, VelocityScaleRepeats)
    GS_PROPERTY(GEFloat, WarmupTicksPerSecond)

  public:
    void SetTimeScale(GEFloat);
};
